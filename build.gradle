
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
}

gradleEnterprise {
    buildScan {
      String date = new Date().format('MM-dd-YYYY-HH:mm:ss')
      String commitId = 'git rev-parse --verify HEAD'.execute().text.trim()
      String projectURL = 'git config --get remote.origin.url'.execute().text.trim()
      String commitURL = "${projectURL}".minus(".git") + "/commit/" + "${commitId}"
      String commitMessage = 'git log -1 --pretty=%B'.execute().text.trim()
      tag "${date}"
      tag "${position}"
      tag "${authorName}"
      tag "${commitId}"
      link "LinkedIn", "${linkedInURL}"
      link "GitHub Commit URL", "${commitURL}"
      value "GitHub Project URL", "${projectURL}"
      value "Commit message", "${commitMessage}"
    }
}

apply plugin: 'java'
apply plugin: 'application'
// Formatting tool doesn't support Java 17+
// apply plugin: "com.github.sherter.google-java-format"

mainClassName = findProperty("main") ?: "com.williamfiset.algorithms.${findProperty("algorithm") ?: 'missingPackage.missingClass'}"

repositories {
  mavenLocal()
  mavenCentral()
}

// Describe all project deps. Use 'testCompile' for test dependencies and
// 'compile' for project dependencies.
dependencies {
  // Apache commons lang
  testImplementation 'org.apache.commons:commons-lang3:3.6'

  // JUnit framework
  testImplementation 'junit:junit:4.+'

  // JUnit 5 / Jupiter
  testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
   
  // Google Guava lib
  testImplementation group: 'com.google.guava', name: 'guava', version: '22.0'

  // Google Truth test framework
  // https://mvnrepository.com/artifact/com.google.truth/truth
  testImplementation group: 'com.google.truth', name: 'truth', version: '1.0'

  // Test mocking framework
  testImplementation "org.mockito:mockito-core:1.+"
}

test {
  dependsOn cleanTest
  testLogging.showStandardStreams = true
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  options.compilerArgs += [
    '-Xlint:unchecked',
    '-Xlint:deprecation'
  ]
}

// Options when compiling tests
compileTestJava {
  options.encoding = 'UTF-8'
  options.compilerArgs += [
    '-Xlint:unchecked',
    '-Xlint:deprecation'
  ]
}

task buildDependenciesFolder(type: Copy) {
  from configurations.implementation
  into './dependencies'
}
